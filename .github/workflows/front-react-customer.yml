name: CD - Deploy frontend_react_app_to_Aws

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**'
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./my_react_app
    steps:
      - uses: actions/checkout@v4

      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":" :github: https://github.com/Rouchdane03/front_react_project_customer/commit/${{github.sha}} ${{github.event.head_commit.message}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
     
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set front image tag
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Building app's docker image and replacing image tag with build_number value and Push to dockerhub
        run: |
          docker build . -t rouchdane/rouch-react-project-customer:${{steps.build-number.outputs.BUILD_NUMBER}} --build-arg api_base_url=${{secrets.ARGS_VALUE_AWS_BACKEND_IMAGE}}
          docker push rouchdane/rouch-react-project-customer:${{steps.build-number.outputs.BUILD_NUMBER}} 

      - name: Send sucess image pushed message to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"the front apps image using ${{secrets.ARGS_VALUE_AWS_BACKEND_IMAGE}} args is is built and pushed to dockerhub registry"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json with the newest application image tag which is build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E "s|(rouchdane/rouch-react-project-customer:)[^\"}]+|\1${{steps.build-number.outputs.BUILD_NUMBER}}|" Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json
      - name: AWS Elastic Beanstalk Deploy the Updated Dockerrun.aws.json file
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_EB_ENVIRONMENT_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{github.SHA}}
          region: ${{ secrets.AWS_EB_REGION }}
          deployment_package: ../Dockerrun.aws.json
      - name: Send deployment to AWS news with AWS Elastic Beanstalk to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"le deploiement sur AWS du front et du back associé est terminé "}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json to our github repo
        run: |
          git config user.name github actions
          git config user.email github actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json specifically our docker app image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Send commit and push news to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"le code avec la modif sur le fichier Dockerrun.aws.json a ete bien commit et push :git-push: sur main par le user github actions"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send last message to slack
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }} :end:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
          
